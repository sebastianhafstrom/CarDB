/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as CarsImport } from "./routes/cars";
import { Route as BrandsImport } from "./routes/brands";
import { Route as CarsNewImport } from "./routes/cars_.new";
import { Route as CarsCarSlugImport } from "./routes/cars_.$carSlug";
import { Route as BrandsNewImport } from "./routes/brands_.new";
import { Route as BrandsBrandSlugImport } from "./routes/brands_.$brandSlug";
import { Route as CarsCarSlugGenerationsNewImport } from "./routes/cars_.$carSlug_.generations_.new";

// Create Virtual Routes

const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const CarsRoute = CarsImport.update({
  path: "/cars",
  getParentRoute: () => rootRoute,
} as any);

const BrandsRoute = BrandsImport.update({
  path: "/brands",
  getParentRoute: () => rootRoute,
} as any);

const IndexLazyRoute = IndexLazyImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy").then((d) => d.Route));

const CarsNewRoute = CarsNewImport.update({
  path: "/cars/new",
  getParentRoute: () => rootRoute,
} as any);

const CarsCarSlugRoute = CarsCarSlugImport.update({
  path: "/cars/$carSlug",
  getParentRoute: () => rootRoute,
} as any);

const BrandsNewRoute = BrandsNewImport.update({
  path: "/brands/new",
  getParentRoute: () => rootRoute,
} as any);

const BrandsBrandSlugRoute = BrandsBrandSlugImport.update({
  path: "/brands/$brandSlug",
  getParentRoute: () => rootRoute,
} as any);

const CarsCarSlugGenerationsNewRoute = CarsCarSlugGenerationsNewImport.update({
  path: "/cars/$carSlug/generations/new",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/brands": {
      id: "/brands";
      path: "/brands";
      fullPath: "/brands";
      preLoaderRoute: typeof BrandsImport;
      parentRoute: typeof rootRoute;
    };
    "/cars": {
      id: "/cars";
      path: "/cars";
      fullPath: "/cars";
      preLoaderRoute: typeof CarsImport;
      parentRoute: typeof rootRoute;
    };
    "/brands/$brandSlug": {
      id: "/brands/$brandSlug";
      path: "/brands/$brandSlug";
      fullPath: "/brands/$brandSlug";
      preLoaderRoute: typeof BrandsBrandSlugImport;
      parentRoute: typeof rootRoute;
    };
    "/brands/new": {
      id: "/brands/new";
      path: "/brands/new";
      fullPath: "/brands/new";
      preLoaderRoute: typeof BrandsNewImport;
      parentRoute: typeof rootRoute;
    };
    "/cars/$carSlug": {
      id: "/cars/$carSlug";
      path: "/cars/$carSlug";
      fullPath: "/cars/$carSlug";
      preLoaderRoute: typeof CarsCarSlugImport;
      parentRoute: typeof rootRoute;
    };
    "/cars/new": {
      id: "/cars/new";
      path: "/cars/new";
      fullPath: "/cars/new";
      preLoaderRoute: typeof CarsNewImport;
      parentRoute: typeof rootRoute;
    };
    "/cars/$carSlug/generations/new": {
      id: "/cars/$carSlug/generations/new";
      path: "/cars/$carSlug/generations/new";
      fullPath: "/cars/$carSlug/generations/new";
      preLoaderRoute: typeof CarsCarSlugGenerationsNewImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  BrandsRoute,
  CarsRoute,
  BrandsBrandSlugRoute,
  BrandsNewRoute,
  CarsCarSlugRoute,
  CarsNewRoute,
  CarsCarSlugGenerationsNewRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/brands",
        "/cars",
        "/brands/$brandSlug",
        "/brands/new",
        "/cars/$carSlug",
        "/cars/new",
        "/cars/$carSlug/generations/new"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/brands": {
      "filePath": "brands.tsx"
    },
    "/cars": {
      "filePath": "cars.tsx"
    },
    "/brands/$brandSlug": {
      "filePath": "brands_.$brandSlug.tsx"
    },
    "/brands/new": {
      "filePath": "brands_.new.tsx"
    },
    "/cars/$carSlug": {
      "filePath": "cars_.$carSlug.tsx"
    },
    "/cars/new": {
      "filePath": "cars_.new.tsx"
    },
    "/cars/$carSlug/generations/new": {
      "filePath": "cars_.$carSlug_.generations_.new.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
